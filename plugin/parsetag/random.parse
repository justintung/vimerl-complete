seed@seed() -> ran() @ 
seed@seed(A1, A2, A3) -> undefined | ran() @ A1 = A2 = A3 = integer()   
seed@seed(X1 :: {A1, A2, A3}) -> undefined | ran() @ A1 = A2 = A3 = integer()   
seed0@seed0() -> ran() @ 
uniform@uniform() -> float()@ 
uniform@uniform(N) -> integer() >= 1@ N = integer() >= 1   
uniform_s@uniform_s(State0) -> {float(), State1}@ State0 = State1 =  ran()    
uniform_s@uniform_s(N, State0) -> {integer(), State1}@ N = integer() >= 1 State0 = State1 =  ran()    
