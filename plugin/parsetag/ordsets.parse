new@new() -> []@ 
is_set@is_set(Ordset) -> boolean()@ Ordset = term()   
size@size(Ordset) -> integer() >= 0@ Ordset =  ordset (term())   
to_list@to_list(Ordset) -> List@ Ordset =  List = [T]   
from_list@from_list(List) -> Ordset@ List = [T] Ordset =  ordset (T)   
is_element@is_element(Element, Ordset) -> boolean()@ Element = term() Ordset =  ordset (term())   
add_element@add_element(Element, Ordset1) -> Ordset2@ Element = E Ordset1 =  Ordset2 =  ordset (T | E)   
del_element@del_element(Element, Ordset1) -> Ordset2@ Element = term() Ordset1 = Ordset2 =  ordset (T)   
union@union(Ordset1, Ordset2) -> Ordset3@ Ordset1 =  Ordset2 =  Ordset3 =  ordset (T1 | T2)   
union@union(OrdsetList) -> Ordset@ OrdsetList = [ Ordset =  ordset (T)   
intersection@intersection(Ordset1, Ordset2) -> Ordset3@ Ordset1 = Ordset2 = Ordset3 =  ordset (term())   
intersection@intersection(OrdsetList) -> Ordset@ OrdsetList = [ Ordset =  ordset (term())   
is_disjoint@is_disjoint(Ordset1, Ordset2) -> boolean()@ Ordset1 = Ordset2 =  ordset (term())   
subtract@subtract(Ordset1, Ordset2) -> Ordset3@ Ordset1 = Ordset2 = Ordset3 =  ordset (term())   
is_subset@is_subset(Ordset1, Ordset2) -> boolean()@ Ordset1 = Ordset2 =  ordset (term())   
fold@fold(Function, Acc0, Ordset) -> Acc1@ Function =  Ordset =  Acc0 = Acc1 = term()   
filter@filter(Pred, Ordset1) -> Ordset2@ Pred = fun((Element :: T) -> boolean()) Ordset1 = Ordset2 =  ordset (T)   
