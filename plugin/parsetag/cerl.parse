type@type(Node::cerl()) -> atom()
is_leaf@is_leaf(Node::cerl()) -> boolean()
get_ann@get_ann(Node::cerl()) -> [term()]
set_ann@set_ann(Node::cerl(), Annotations::[term()]) -> cerl()
add_ann@add_ann(Annotations::[term()], Node::cerl()) -> cerl()
copy_ann@copy_ann(Source::cerl(), Target::cerl()) -> cerl()
abstract@abstract(Term::term()) -> cerl()
ann_abstract@ann_abstract(Annotations::[term()], Term::term()) -> cerl()
is_literal_term@is_literal_term(Term::term()) -> boolean()
concrete@concrete(Node::cerl()) -> term()
is_literal@is_literal(Node::cerl()) -> boolean()
fold_literal@fold_literal(Node::cerl()) -> cerl()
unfold_literal@unfold_literal(Node::cerl()) -> cerl()
c_module@c_module(Name::cerl(), Exports, Es::Definitions) -> cerl()
ann_c_module@ann_c_module(As::[term()], Name::cerl(), Exports, Es::Definitions) -> cerl()
update_c_module@update_c_module(Old::cerl(), Name::cerl(), Exports, Attrs::Attributes, Es::Definitions) -> cerl()
is_c_module@is_c_module(Node::cerl()) -> boolean()
module_name@module_name(Node::cerl()) -> cerl()
module_exports@module_exports(Node::cerl()) -> [cerl()]
module_attrs@module_attrs(Node::cerl()) -> [{cerl(), cerl()}]
module_defs@module_defs(Node::cerl()) -> [{cerl(), cerl()}]
module_vars@module_vars(Node::cerl()) -> [cerl()]
c_int@c_int(Value::integer()) -> cerl()
ann_c_int@ann_c_int(As::[term()], Value::integer()) -> cerl()
is_c_int@is_c_int(Node::cerl()) -> boolean()
int_val@int_val(Node::cerl()) -> integer()
int_lit@int_lit(Node::cerl()) -> string()
c_float@c_float(Value::float()) -> cerl()
ann_c_float@ann_c_float(As::[term()], Value::float()) -> cerl()
is_c_float@is_c_float(Node::cerl()) -> boolean()
float_val@float_val(Node::cerl()) -> float()
float_lit@float_lit(Node::cerl()) -> string()
c_atom@c_atom(Name) -> cerl()
ann_c_atom@ann_c_atom(As::[term()], Name) -> cerl()
is_c_atom@is_c_atom(Node::cerl()) -> boolean()
atom_val@atom_val(Node::cerl()) -> atom()
atom_name@atom_name(Node::cerl()) -> string()
atom_lit@atom_lit(Node::cerl()) -> string()
c_char@c_char(Value) -> cerl()
ann_c_char@ann_c_char(As::[term()], Value::char()) -> cerl()
is_c_char@is_c_char(Node::cerl()) -> boolean()
is_print_char@is_print_char(Node::cerl()) -> boolean()
char_val@char_val(Node::cerl()) -> char()
char_lit@char_lit(Node::cerl()) -> string()
c_string@c_string(Value::string()) -> cerl()
ann_c_string@ann_c_string(As::[term()], Value::string()) -> cerl()
is_c_string@is_c_string(Node::cerl()) -> boolean()
is_print_string@is_print_string(Node::cerl()) -> boolean()
string_val@string_val(Node::cerl()) -> string()
string_lit@string_lit(Node::cerl()) -> string()
c_nil@c_nil() -> cerl()
ann_c_nil@ann_c_nil(As::[term()]) -> cerl()
is_c_nil@is_c_nil(Node::cerl()) -> boolean()
c_cons@c_cons(Head::cerl(), Tail::cerl()) -> cerl()
ann_c_cons@ann_c_cons(As::[term()], Head::cerl(), Tail::cerl()) -> cerl()
update_c_cons@update_c_cons(Old::cerl(), Head::cerl(), Tail::cerl()) -> cerl()
c_cons_skel@c_cons_skel(Head::cerl(), Tail::cerl()) -> cerl()
ann_c_cons_skel@ann_c_cons_skel(As::[term()], Head::cerl(), Tail::cerl()) -> cerl()
update_c_cons_skel@update_c_cons_skel(Old::cerl(), Head::cerl(), Tail::cerl()) -> cerl()
is_c_cons@is_c_cons(Node::cerl()) -> boolean()
cons_hd@cons_hd(C_cons::cerl()) -> cerl()
cons_tl@cons_tl(C_cons::cerl()) -> cerl()
is_c_list@is_c_list(Node::cerl()) -> boolean()
list_elements@list_elements(C_cons::cerl()) -> [cerl()]
list_length@list_length(Node::cerl()) -> integer()
make_list@make_list(List) -> Node
update_list@update_list(Old::cerl(), List::[cerl()]) -> cerl()
ann_make_list@ann_make_list(As::[term()], List::[cerl()]) -> cerl()
c_tuple@c_tuple(Elements::[cerl()]) -> cerl()
ann_c_tuple@ann_c_tuple(As::[term()], Elements::[cerl()]) -> cerl()
update_c_tuple@update_c_tuple(Old::cerl(), Elements::[cerl()]) -> cerl()
c_tuple_skel@c_tuple_skel(Elements::[cerl()]) -> cerl()
ann_c_tuple_skel@ann_c_tuple_skel(As::[term()], Elements::[cerl()]) -> cerl()
update_c_tuple_skel@update_c_tuple_skel(Old::cerl(), Elements::[cerl()]) -> cerl()
is_c_tuple@is_c_tuple(Node::cerl()) -> boolean()
tuple_es@tuple_es(C_tuple::cerl()) -> [cerl()]
tuple_arity@tuple_arity(Node::cerl()) -> integer()
c_var@c_var(Name::var_name()) -> cerl()
ann_c_var@ann_c_var(As::[term()], Name::var_name()) -> cerl()
update_c_var@update_c_var(Old::cerl(), Name::var_name()) -> cerl()
is_c_var@is_c_var(Node::cerl()) -> boolean()
c_fname@c_fname(Name::atom(), Arity::integer()) -> cerl()
ann_c_fname@ann_c_fname(As::[term()], Name::atom(), Arity::integer()) -> cerl()
update_c_fname@update_c_fname(Old::cerl(), Name::atom()) -> cerl()
is_c_fname@is_c_fname(Node::cerl()) -> boolean()
var_name@var_name(Node::cerl()) -> var_name()
fname_id@fname_id(C_var::cerl()) -> atom()
fname_arity@fname_arity(C_var::cerl()) -> byte()
c_values@c_values(Elements::[cerl()]) -> cerl()
ann_c_values@ann_c_values(As::[term()], Elements::[cerl()]) -> cerl()
update_c_values@update_c_values(Old::cerl(), Elements::[cerl()]) -> cerl()
is_c_values@is_c_values(Node::cerl()) -> boolean()
values_es@values_es(Node::cerl()) -> [cerl()]
values_arity@values_arity(Node::cerl()) -> integer()
c_binary@c_binary(Segments::[cerl()]) -> cerl()
ann_c_binary@ann_c_binary(As::[term()], Segments::[cerl()]) -> cerl()
update_c_binary@update_c_binary(Old::cerl(), Segments::[cerl()]) -> cerl()
is_c_binary@is_c_binary(Node::cerl()) -> boolean()
binary_segments@binary_segments(Node::cerl()) -> [cerl()]
c_bitstr@c_bitstr(Value::cerl(), Size::cerl(), Unit::cerl(), Type::cerl(), Flags::cerl()) -> cerl()
ann_c_bitstr@ann_c_bitstr(As::[term()], Value::cerl(), Size::cerl(), Unit::cerl(), Type::cerl(), Flags::cerl()) -> cerl()
update_c_bitstr@update_c_bitstr(Old::cerl(), Value::cerl(), Size::cerl(), Unit::cerl(), Type::cerl(), Flags::cerl()) -> cerl()
is_c_bitstr@is_c_bitstr(Node::cerl()) -> boolean()
bitstr_val@bitstr_val(Node::cerl()) -> cerl()
bitstr_size@bitstr_size(Node::cerl()) -> cerl()
bitstr_bitsize@bitstr_bitsize(Node::cerl()) -> any | all | utf | integer()
bitstr_unit@bitstr_unit(Node::cerl()) -> cerl()
bitstr_type@bitstr_type(Node::cerl()) -> cerl()
bitstr_flags@bitstr_flags(Node::cerl()) -> cerl()
c_fun@c_fun(Variables::[cerl()], Body::cerl()) -> cerl()
ann_c_fun@ann_c_fun(As::[term()], Variables::[cerl()], Body::cerl()) -> cerl()
update_c_fun@update_c_fun(Old::cerl(), Variables::[cerl()], Body::cerl()) -> cerl()
is_c_fun@is_c_fun(Node::cerl()) -> boolean()
fun_vars@fun_vars(Node::cerl()) -> [cerl()]
fun_body@fun_body(Node::cerl()) -> cerl()
fun_arity@fun_arity(Node::cerl()) -> integer()
c_seq@c_seq(Argument::cerl(), Body::cerl()) -> cerl()
ann_c_seq@ann_c_seq(As::[term()], Argument::cerl(), Body::cerl()) -> cerl()
update_c_seq@update_c_seq(Old::cerl(), Argument::cerl(), Body::cerl()) -> cerl()
is_c_seq@is_c_seq(Node::cerl()) -> boolean()
seq_arg@seq_arg(Node::cerl()) -> cerl()
seq_body@seq_body(Node::cerl()) -> cerl()
c_let@c_let(Variables::[cerl()], Argument::cerl(), Body::cerl()) -> cerl()
ann_c_let@ann_c_let(As::[term()], Variables::[cerl()], Argument::cerl(), Body::cerl()) -> c_let()
update_c_let@update_c_let(Node::c_let(), Variables::[cerl()], Argument::cerl(), Body::cerl()) -> c_let()
is_c_let@is_c_let(Node::cerl()) -> boolean()
let_vars@let_vars(Node::cerl()) -> [cerl()]
let_arg@let_arg(Node::cerl()) -> cerl()
let_body@let_body(Node::cerl()) -> cerl()
let_arity@let_arity(Node::cerl()) -> integer()
c_letrec@c_letrec(Definitions::[{cerl(), cerl()}], Body::cerl()) -> cerl()
ann_c_letrec@ann_c_letrec(As::[term()], Definitions::[{cerl(), cerl()}], Body::cerl()) -> cerl()
update_c_letrec@update_c_letrec(Old::cerl(), Definitions::[{cerl(), cerl()}], Body::cerl()) -> cerl()
is_c_letrec@is_c_letrec(Node::cerl()) -> boolean()
letrec_defs@letrec_defs(Node::cerl()) -> [{cerl(), cerl()}]
letrec_body@letrec_body(Node::cerl()) -> cerl()
letrec_vars@letrec_vars(Node::cerl()) -> [cerl()]
c_case@c_case(Argument::cerl(), Clauses::[cerl()]) -> cerl()
ann_c_case@ann_c_case(As::[term()], Argument::cerl(), Clauses::[cerl()]) -> cerl()
update_c_case@update_c_case(Old::cerl(), Argument::cerl(), Clauses::[cerl()]) -> cerl()
is_c_case@is_c_case(C_case::cerl()) -> boolean()
case_arg@case_arg(Node::cerl()) -> cerl()
case_clauses@case_clauses(Node::cerl()) -> [cerl()]
case_arity@case_arity(Node::cerl()) -> integer()
c_clause@c_clause(Patterns::[cerl()], Body::cerl()) -> cerl()
ann_c_clause@ann_c_clause(As::[term()], Patterns::[cerl()], Body::cerl()) -> cerl()
update_c_clause@update_c_clause(Old::cerl(), Patterns::[cerl()], Guard::cerl(), Body::cerl()) -> cerl()
is_c_clause@is_c_clause(Node::cerl()) -> boolean()
clause_pats@clause_pats(Node::cerl()) -> [cerl()]
clause_guard@clause_guard(Node::cerl()) -> cerl()
clause_body@clause_body(Node::cerl()) -> cerl()
clause_arity@clause_arity(Node::cerl()) -> integer()
clause_vars@clause_vars(Clause::cerl()) -> [cerl()]
pat_vars@pat_vars(Pattern::cerl()) -> [cerl()]
pat_list_vars@pat_list_vars(Patterns::[cerl()]) -> [cerl()]
c_alias@c_alias(Variable::cerl(), Pattern::cerl()) -> cerl()
ann_c_alias@ann_c_alias(As::[term()], Variable::cerl(), Pattern::cerl()) -> cerl()
update_c_alias@update_c_alias(Old::cerl(), Variable::cerl(), Pattern::cerl()) -> cerl()
is_c_alias@is_c_alias(Node::cerl()) -> boolean()
alias_var@alias_var(Node::cerl()) -> cerl()
alias_pat@alias_pat(Node::cerl()) -> cerl()
c_receive@c_receive(Clauses::[cerl()]) -> cerl()
ann_c_receive@ann_c_receive(As::[term()], Clauses::[cerl()]) -> cerl()
update_c_receive@update_c_receive(Old::cerl(), Clauses::[cerl()], Timeout::cerl(), Action::cerl()) -> cerl()
is_c_receive@is_c_receive(Node::cerl()) -> boolean()
receive_clauses@receive_clauses(Node::cerl()) -> [cerl()]
receive_timeout@receive_timeout(Node::cerl()) -> cerl()
receive_action@receive_action(Node::cerl()) -> cerl()
c_apply@c_apply(Operator::cerl(), Arguments::[cerl()]) -> cerl()
ann_c_apply@ann_c_apply(As::[term()], Operator::cerl(), Arguments::[cerl()]) -> cerl()
update_c_apply@update_c_apply(Old::cerl(), Operator::cerl(), Arguments::[cerl()]) -> cerl()
is_c_apply@is_c_apply(Node::cerl()) -> boolean()
apply_op@apply_op(Node::cerl()) -> cerl()
apply_args@apply_args(Node::cerl()) -> [cerl()]
apply_arity@apply_arity(Node::cerl()) -> integer()
c_call@c_call(Module::cerl(), Name::cerl(), Arguments::[cerl()]) -> cerl()
ann_c_call@ann_c_call(As::[term()], Module::cerl(), Name::cerl(), Arguments::[cerl()]) -> cerl()
update_c_call@update_c_call(Old::cerl(), Module::cerl(), Name::cerl(), Arguments::[cerl()]) -> cerl()
is_c_call@is_c_call(Node::cerl()) -> boolean()
call_module@call_module(Node::cerl()) -> cerl()
call_name@call_name(Node::cerl()) -> cerl()
call_args@call_args(Node::cerl()) -> [cerl()]
call_arity@call_arity(Node::cerl()) -> integer()
c_primop@c_primop(Name::cerl(), Arguments::[cerl()]) -> cerl()
ann_c_primop@ann_c_primop(As::[term()], Name::cerl(), Arguments::[cerl()]) -> cerl()
update_c_primop@update_c_primop(Old::cerl(), Name::cerl(), Arguments::[cerl()]) -> cerl()
is_c_primop@is_c_primop(Node::cerl()) -> boolean()
primop_name@primop_name(Node::cerl()) -> cerl()
primop_args@primop_args(Node::cerl()) -> [cerl()]
primop_arity@primop_arity(Node::cerl()) -> integer()
c_try@c_try(Argument::cerl(), Variables::[cerl()], Body::cerl(), ExceptionVars::[cerl()], Handler::cerl()) -> cerl()
ann_c_try@ann_c_try(As::[term()], Expression::cerl(), Variables::[cerl()], Body::cerl(), EVars::[cerl()], Handler::cerl()) -> cerl()
update_c_try@update_c_try(Old::cerl(), Expression::cerl(), Variables::[cerl()], Body::cerl(), EVars::[cerl()], Handler::cerl()) -> cerl()
is_c_try@is_c_try(Node::cerl()) -> boolean()
try_arg@try_arg(Node::cerl()) -> cerl()
try_vars@try_vars(Node::cerl()) -> [cerl()]
try_body@try_body(Node::cerl()) -> cerl()
try_evars@try_evars(Node::cerl()) -> [cerl()]
try_handler@try_handler(Node::cerl()) -> cerl()
c_catch@c_catch(Body::cerl()) -> cerl()
ann_c_catch@ann_c_catch(As::[term()], Body::cerl()) -> cerl()
update_c_catch@update_c_catch(Old::cerl(), Body::cerl()) -> cerl()
is_c_catch@is_c_catch(Node::cerl()) -> boolean()
catch_body@catch_body(Node::cerl()) -> cerl()
to_records@to_records(Tree::cerl()) -> record(record_types())
from_records@from_records(Tree::record(record_types())) -> cerl()
is_data@is_data(Node::cerl()) -> boolean()
data_type@data_type(Node::cerl()) -> dtype()
data_es@data_es(Node::cerl()) -> [cerl()]
data_arity@data_arity(Node::cerl()) -> integer()
make_data@make_data(Type::dtype(), Elements::[cerl()]) -> cerl()
ann_make_data@ann_make_data(As::[term()], Type::dtype(), Elements::[cerl()]) -> cerl()
update_data@update_data(Old::cerl(), Type::dtype(), Elements::[cerl()]) -> cerl()
make_data_skel@make_data_skel(Type::dtype(), Elements::[cerl()]) -> cerl()
ann_make_data_skel@ann_make_data_skel(As::[term()], Type::dtype(), Elements::[cerl()]) -> cerl()
update_data_skel@update_data_skel(Old::cerl(), Type::dtype(), Elements::[cerl()]) -> cerl()
subtrees@subtrees(Node::cerl()) -> [[cerl()]]
update_tree@update_tree(Old::cerl(), Groups::[[cerl()]]) -> cerl()
make_tree@make_tree(Type::ctype(), Groups::[[cerl()]]) -> cerl()
ann_make_tree@ann_make_tree(As::[term()], Type::ctype(), Groups::[[cerl()]]) -> cerl()
meta@meta(Tree::cerl()) -> cerl()
