start_link@start_link(Module, Args, Options) -> Result@ 
start_link@start_link(FsmName, Module, Args, Options) -> Result@ 
start@start(Module, Args, Options) -> Result@ 
start@start(FsmName, Module, Args, Options) -> Result@ 
send_event@send_event(FsmRef, Event) -> ok@ 
send_all_state_event@send_all_state_event(FsmRef, Event) -> ok@ 
sync_send_event@sync_send_event(FsmRef, Event) -> Reply@ 
sync_send_event@sync_send_event(FsmRef, Event, Timeout) -> Reply@ 
sync_send_all_state_event@sync_send_all_state_event(FsmRef, Event) -> Reply@ 
sync_send_all_state_event@sync_send_all_state_event(FsmRef, Event, Timeout) -> Reply@ 
reply@reply(Caller, Reply) -> true@ 
send_event_after@send_event_after(Time, Event) -> Ref@ 
start_timer@start_timer(Time, Msg) -> Ref@ 
cancel_timer@cancel_timer(Ref) -> RemainingTime | false@ 
enter_loop@enter_loop(Module, Options, StateName, StateData)@ 
enter_loop@enter_loop(Module, Options, StateName, StateData, FsmName)@ 
enter_loop@enter_loop(Module, Options, StateName, StateData, FsmName, Timeout)@ 
init@Module:init(Args) -> Result@ 
StateName@Module:StateName(Event, StateData) -> Result@ 
handle_event@Module:handle_event(Event, StateName, StateData) -> Result@ 
StateName@Module:StateName(Event, From, StateData) -> Result@ 
handle_sync_event@Module:handle_sync_event(Event, From, StateName, StateData) -> Result@ 
handle_info@Module:handle_info(Info, StateName, StateData) -> Result@ 
terminate@Module:terminate(Reason, StateName, StateData)@ 
code_change@Module:code_change(OldVsn, StateName, StateData, Extra) -> {ok, NextStateName, NewStateData}@ 
format_status@Module:format_status(Opt, [PDict, StateData]) -> Status@ 
