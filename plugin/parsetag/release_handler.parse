check_install_release@check_install_release(Vsn) -> {ok, OtherVsn, Descr} | {error, Reason}@ 
check_install_release@check_install_release(Vsn,Opts) -> {ok, OtherVsn, Descr} | {error, Reason}@ 
create_RELEASES@create_RELEASES(Root, RelDir, RelFile, AppDirs) -> ok | {error, Reason}@ 
install_file@install_file(Vsn, File) -> ok | {error, Reason}@ 
install_release@install_release(Vsn) -> {ok, OtherVsn, Descr} | {error, Reason}@ 
install_release@install_release(Vsn, [Opt]) -> {ok, OtherVsn, Descr} | {continue_after_restart, OtherVsn, Descr} | {error, Reason}@ 
make_permanent@make_permanent(Vsn) -> ok | {error, Reason}@ 
remove_release@remove_release(Vsn) -> ok | {error, Reason}@ 
reboot_old_release@reboot_old_release(Vsn) -> ok | {error, Reason}@ 
set_removed@set_removed(Vsn) -> ok | {error, Reason}@ 
set_unpacked@set_unpacked(RelFile, AppDirs) -> {ok, Vsn} | {error, Reason}@ 
unpack_release@unpack_release(Name) -> {ok, Vsn} | {error, Reason}@ 
which_releases@which_releases() -> [{Name, Vsn, Apps, Status}]@ 
which_releases@which_releases(Status) -> [{Name, Vsn, Apps, Status}]@ 
upgrade_app@upgrade_app(App, Dir) -> {ok, Unpurged} | restart_emulator | {error, Reason}@ 
downgrade_app@downgrade_app(App, Dir) ->@ 
downgrade_app@downgrade_app(App, OldVsn, Dir) -> {ok, Unpurged} | restart_emulator | {error, Reason}@ 
upgrade_script@upgrade_script(App, Dir) -> {ok, NewVsn, Script}@ 
downgrade_script@downgrade_script(App, OldVsn, Dir) -> {ok, Script}@ 
eval_appup_script@eval_appup_script(App, ToVsn, ToDir, Script) -> {ok, Unpurged} | restart_emulator | {error, Reason}@ 
