monitor@monitor() -> Ref@ 
demonitor@demonitor(Ref) -> void()@ 
notify_started@notify_started(Timeout) -> Pid@ 
cancel_notify_started@cancel_notify_started(Pid) -> void()@ 
register_user@register_user(Id, Module, Data) -> ok | {error, Reason}@ 
register_user@register_user(Id, Module, Data, DefaultAgentConfig) -> ok | {error, Reason}@ 
register_user_monitor@register_user_monitor(Id, Module, Data) -> ok | {error, Reason}@ 
register_user_monitor@register_user_monitor(Id, Module, Data, DefaultAgentConfig) -> ok | {error, Reason}@ 
unregister_user@unregister_user(Id) -> ok | {error, Reason}@ 
which_users@which_users() -> Users@ 
register_agent@register_agent(UserId, TargetName, Config) -> ok | {error, Reason}@ 
unregister_agent@unregister_agent(UserId, TargetName) -> ok | {error, Reason}@ 
agent_info@agent_info(TargetName, Item) -> {ok, Val} | {error, Reason}@ 
update_agent_info@update_agent_info(UserId, TargetName, Info) -> ok | {error, Reason}@ 
update_agent_info@update_agent_info(UserId, TargetName, Item, Val) -> ok | {error, Reason}@ 
which_agents@which_agents() -> Agents@ 
which_agents@which_agents(UserId) -> Agents@ 
register_usm_user@register_usm_user(EngineID, UserName, Conf) -> ok | {error, Reason}@ 
unregister_usm_user@unregister_usm_user(EngineID, UserName) -> ok | {error, Reason}@ 
usm_user_info@usm_user_info(EngineID, UserName, Item) -> {ok, Val} | {error, Reason}@ 
update_usm_user_info@update_usm_user_info(EngineID, UserName, Item, Val) -> ok | {error, Reason}@ 
which_usm_users@which_usm_users() -> UsmUsers@ 
which_usm_users@which_usm_users(EngineID) -> UsmUsers@ 
sync_get2@sync_get2(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get2@sync_get2(UserId, TargetName, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get@sync_get(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get@sync_get(UserId, TargetName, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get@sync_get(UserId, TargetName, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get@sync_get(UserId, TargetName, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
async_get2@async_get2(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get2@async_get2(UserId, TargetName, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}@ 
async_get@async_get(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get@async_get(UserId, TargetName, ContextName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get@async_get(UserId, TargetName, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}@ 
async_get@async_get(UserId, TargetName, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}@ 
sync_get_next2@sync_get_next2(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_next2@sync_get_next2(UserId, TargetName, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_next@sync_get_next(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_next@sync_get_next(UserId, TargetName, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_next@sync_get_next(UserId, TargetName, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_next@sync_get_next(UserId, TargetName, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
async_get_next2@async_get_next2(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_next2@async_get_next2(UserId, TargetName, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}@ 
async_get_next@async_get_next(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_next@async_get_next(UserId, TargetName, ContextName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_next@async_get_next(UserId, TargetName, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}@ 
async_get_next@async_get_next(UserId, TargetName, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}@ 
sync_set2@sync_set2(UserId, TargetName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_set2@sync_set2(UserId, TargetName, VarsAndVals, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_set@sync_set(UserId, TargetName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_set@sync_set(UserId, TargetName, ContextName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_set@sync_set(UserId, TargetName, ContextName, VarsAndVals, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_set@sync_set(UserId, TargetName, ContextName, VarsAndVals, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
async_set2@async_set2(UserId, TargetName, VarsAndVals) -> {ok, ReqId} | {error, Reason}@ 
async_set2@async_set2(UserId, TargetName, VarsAndVals, SendOpts) -> {ok, ReqId} | {error, Reason}@ 
async_set@async_set(UserId, TargetName, VarsAndVals) -> {ok, ReqId} | {error, Reason}@ 
async_set@async_set(UserId, TargetName, ContextName, VarsAndVals) -> {ok, ReqId} | {error, Reason}@ 
async_set@async_set(UserId, TargetName, ContextName, VarsAndVals, Expire) -> {ok, ReqId} | {error, Reason}@ 
async_set@async_set(UserId, TargetName, ContextName, VarsAndVals, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}@ 
sync_get_bulk2@sync_get_bulk2(UserId, TragetName, NonRep, MaxRep, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_bulk2@sync_get_bulk2(UserId, TragetName, NonRep, MaxRep, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_bulk@sync_get_bulk(UserId, TragetName, NonRep, MaxRep, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_bulk@sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_bulk@sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
sync_get_bulk@sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}@ 
async_get_bulk2@async_get_bulk2(UserId, TargetName, NonRep, MaxRep, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_bulk2@async_get_bulk2(UserId, TargetName, NonRep, MaxRep, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}@ 
async_get_bulk@async_get_bulk(UserId, TargetName, NonRep, MaxRep, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_bulk@async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids) -> {ok, ReqId} | {error, Reason}@ 
async_get_bulk@async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}@ 
async_get_bulk@async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}@ 
cancel_async_request@cancel_async_request(UserId, ReqId) -> ok | {error, Reason}@ 
log_to_txt@log_to_txt(LogDir, Mibs)@ 
log_to_txt@log_to_txt(LogDir, Mibs, OutFile) -> ok | {error, Reason}@ 
log_to_txt@log_to_txt(LogDir, Mibs, OutFile, LogName) ->  ok | {error, Reason}@ 
log_to_txt@log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile) ->  ok | {error, Reason}@ 
log_to_txt@log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Start) ->  ok | {error, Reason}@ 
log_to_txt@log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Start, Stop)  -> ok | {error, Reason}@ 
change_log_size@change_log_size(NewSize) -> ok | {error, Reason}@ 
set_log_type@set_log_type(NewType) -> {ok, OldType} | {error, Reason}@ 
load_mib@load_mib(Mib) -> ok | {error, Reason}@ 
unload_mib@unload_mib(Mib) -> ok | {error, Reason}@ 
which_mibs@which_mibs() -> Mibs@ 
name_to_oid@name_to_oid(Name) -> {ok, Oids} | {error, Reason}@ 
oid_to_name@oid_to_name(Oid) -> {ok, Name} | {error, Reason}@ 
oid_to_type@oid_to_type(Oid) -> {ok, Type} | {error, Reason}@ 
backup@backup(BackupDir) -> ok | {error, Reason}@ 
info@info() -> [{Key, Value}]@ 
verbosity@verbosity(Ref, Verbosity) -> void()@ 
format_reason@format_reason(Reason) -> string()@ 
format_reason@format_reason(Prefix, Reason) -> string()@ 
