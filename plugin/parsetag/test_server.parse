os_type@os_type() -> OSType@ 
fail@fail()@ 
fail@fail(Reason)@ 
timetrap@timetrap(Timout) -> Handle@ 
timetrap_cancel@timetrap_cancel(Handle) -> ok@ 
timetrap_scale_factor@timetrap_scale_factor() -> ScaleFactor@ 
sleep@sleep(MSecs) -> ok@ 
adjusted_sleep@adjusted_sleep(MSecs) -> ok@ 
hours@hours(N) -> MSecs@ 
minutes@minutes(N) -> MSecs@ 
seconds@seconds(N) -> MSecs@ 
format@format(Format) -> ok@ 
format@format(Format, Args)@ 
format@format(Pri, Format, Args)@ 
capture_start@capture_start() -> ok@ 
capture_stop@capture_stop() -> ok@ 
capture_get@capture_get() -> list()@ 
messages_get@messages_get() -> list()@ 
timecall@timecall(M, F, A) -> {Time, Value}@ 
do_times@do_times(N, M, F, A) -> ok@ 
do_times@do_times(N, Fun)@ 
m_out_of_n@m_out_of_n(M, N, Fun) -> ok | exit({m_out_of_n_failed, {R,left_to_do}}@ 
call_crash@call_crash(M, F, A) -> Result@ 
call_crash@call_crash(Time, M, F, A) -> Result@ 
call_crash@call_crash(Time, Crash, M, F, A) -> Result@ 
temp_name@temp_name(Stem) -> Name@ 
break@break(Comment) -> ok@ 
continue@continue() -> ok@ 
run_on_shielded_node@run_on_shielded_node(Fun, CArgs) -> term()@ 
start_node@start_node(Name, Type, Options) -> {ok, Node} | {error, Reason}@ 
stop_node@stop_node(NodeName) -> bool()@ 
is_commercial@is_commercial() -> bool()@ 
is_release_available@is_release_available(Release) -> bool()@ 
is_native@is_native(Mod) -> bool()@ 
app_test@app_test(App) -> ok | test_server:fail()@ 
app_test@app_test(App,Mode)@ 
comment@comment(Comment) -> ok@ 
all@all(suite) -> TestSpec | {skip, Comment}@ 
init_per_suite@init_per_suite(Config0) -> Config1 | {skip, Comment}@ 
end_per_suite@end_per_suite(Config) -> void()@ 
init_per_testcase@init_per_testcase(Case, Config0) -> Config1 | {skip, Comment}@ 
end_per_testcase@end_per_testcase(Case, Config) -> void()@ 
Case@Case(doc) -> [Decription]@ 
