connect@connect(Address, Port, Options) -> {ok, Socket} | {error, Reason}@ Address =  Port =  Options = [ Socket =  Reason =  inet:posix()    
connect@connect(Address, Port, Options, Timeout) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, Socket} | {error, Reason}@ Address =  Port =  Options = [ Timeout = timeout() Socket =  Reason =  inet:posix()    
listen@listen(Port, Options) -> {ok, ListenSocket} | {error, Reason}@ Port =  Options = [ ListenSocket =  Reason =  inet:posix()    
accept@accept(ListenSocket) -> {ok, Socket} | {error, Reason}@ ListenSocket = Socket =  Reason = closed | timeout |  inet:posix()    
accept@accept(ListenSocket, Timeout) -> {ok, Socket} | {error, Reason}@ ListenSocket =  Timeout = timeout() Socket =  Reason = closed | timeout |  inet:posix()    
send@send(Socket, Packet) -> ok | {error, Reason}@ Socket =  Packet = iodata() Reason =  inet:posix()    
recv@recv(Socket, Length) -> {ok, Packet} | {error, Reason}@ Socket =  Length = integer() >= 0 Packet = string() | binary() | HttpPacket Reason = closed |  HttpPacket = term()   
recv@recv(Socket, Length, Timeout) -> {ok, Packet} | {error, Reason}@ Socket =  Length = integer() >= 0 Timeout = timeout() Packet = string() | binary() | HttpPacket Reason = closed |  HttpPacket = term()   
controlling_process@controlling_process(Socket, Pid) -> ok | {error, Reason}@ Socket =  Pid = pid() Reason = closed | not_owner |  inet:posix()    
close@close(Socket) -> ok@ Socket =  socket()    
shutdown@shutdown(Socket, How) -> ok | {error, Reason}@ Socket =  How = read | write | read_write Reason =  inet:posix()    
