init@init(Nodes,Timeout) -> ok@ 
find_repository@find_repository() -> #IFR_Repository_objref@ 
get_def_kind@get_def_kind(Objref) -> Return@ 
destroy@destroy(Objref) -> Return@ 
get_id@get_id(Objref) -> Return@ 
set_id@set_id(Objref,Id) -> ok@ 
get_name@get_name(Objref) -> Return@ 
set_name@set_name(Objref,Name) -> ok@ 
get_version@get_version(Objref) -> Return@ 
set_version@set_version(Objref,Version) -> ok@ 
get_defined_in@get_defined_in(Objref) -> Return@ 
get_absolute_name@get_absolute_name(Objref) -> Return@ 
get_containing_repository@get_containing_repository(Objref) -> Return@ 
describe@describe(Objref) -> Return@ 
move@move(Objref,New_container,New_name,New_version) -> Return@ 
lookup@lookup(Objref,Search_name) -> Return@ 
contents@contents(Objref,Limit_type,Exclude_inherited) -> Return@ 
lookup_name@lookup_name(Objref,Search_name,Levels_to_search, Limit_type, Exclude_inherited) -> Return@ 
describe_contents@describe_contents(Objref, Limit_type, Exclude_inherited, Max_returned_objs) -> Return@ 
create_module@create_module(Objref,Id,Name,Version) -> Return@ 
create_constant@create_constant(Objref,Id,Name,Version,Type,Value) -> Return@ 
create_struct@create_struct(Objref,Id,Name,Version,Members) -> Return@ 
create_union@create_union(Objref,Id,Name,Version,Discriminator_type,Members) -> Return@ 
create_enum@create_enum(Objref,Id,Name,Version,Members) -> Return@ 
create_alias@create_alias(Objref,Id,Name,Version,Original_type) -> Return@ 
create_interface@create_interface(Objref,Id,Name,Version,Base_interfaces) -> Return@ 
create_exception@create_exception(Objref,Id,Name,Version,Members) -> Return@ 
get_type@get_type(Objref) -> Return@ 
lookup_id@lookup_id(Objref,Search_id) -> Return@ 
get_primitive@get_primitive(Objref,Kind) -> Return@ 
create_string@create_string(Objref,Bound) -> Return@ 
create_wstring@create_wstring(Objref,Bound) -> Return@ 
create_fixed@create_fixed(Objref,Digits,Scale) -> Return@ 
create_sequence@create_sequence(Objref,Bound,Element_type) -> Return@ 
create_array@create_array(Objref,Length,Element_type) -> Return@ 
create_idltype@create_idltype(Objref,Typecode) -> Return@ 
get_type_def@get_type_def(Objref) -> Return@ 
set_type_def@set_type_def(Objref,TypeDef) -> Return@ 
get_value@get_value(Objref) -> Return@ 
set_value@set_value(Objref,Value) -> Return@ 
get_members@get_members(Objref) -> Return@ 
set_members@set_members(Objref,Members) -> Return@ 
get_discriminator_type@get_discriminator_type(Objref) -> Return@ 
get_discriminator_type_def@get_discriminator_type_def(Objref) -> Return@ 
set_discriminator_type_def@set_discriminator_type_def(Objref,TypeDef) ->  Return@ 
get_original_type_def@get_original_type_def(Objref) -> Return@ 
set_original_type_def@set_original_type_def(Objref,TypeDef) -> Return@ 
get_kind@get_kind(Objref) -> Return@ 
get_bound@get_bound(Objref) -> Return@ 
set_bound@set_bound(Objref,Bound) -> Return@ 
get_element_type@get_element_type(Objref) -> Return@ 
get_element_type_def@get_element_type_def(Objref) -> Return@ 
set_element_type_def@set_element_type_def(Objref,TypeDef) -> Return@ 
get_length@get_length(Objref) -> Return@ 
set_length@set_length(Objref,Length) -> Return@ 
get_mode@get_mode(Objref) -> Return@ 
set_mode@set_mode(Objref,Mode) -> Return@ 
get_result@get_result(Objref) -> Return@ 
get_result_def@get_result_def(Objref) -> Return@ 
set_result_def@set_result_def(Objref,ResultDef) -> Return@ 
get_params@get_params(Objref) -> Return@ 
set_params@set_params(Objref,Params) -> Return@ 
get_contexts@get_contexts(Objref) -> Return@ 
set_contexts@set_contexts(Objref,Contexts) -> Return@ 
get_exceptions@get_exceptions(Objref) -> Return@ 
set_exceptions@set_exceptions(Objref,Exceptions) -> Return@ 
get_base_interfaces@get_base_interfaces(Objref) -> Return@ 
set_base_interfaces@set_base_interfaces(Objref,BaseInterfaces) -> Return@ 
is_a@is_a(Objref,Interface_id) -> Return@ 
describe_interface@describe_interface(Objref) -> Return@ 
create_attribute@create_attribute(Objref,Id,Name,Version,Type,Mode) -> Return@ 
create_operation@create_operation(Objref,Id,Name,Version,Result,Mode,Params, Exceptions,Contexts) -> Return@ 
