start@start() -> Result@ 
start@start(ParameterFile) -> Result@ 
stop@stop() -> ok@ 
add_dir@add_dir(Name, Dir) -> ok@ 
add_dir@add_dir(Name, Dir, Pattern) -> ok@ 
add_module@add_module(Mod) -> ok@ 
add_module@add_module(Name, [Mod|Mods]) -> ok@ 
add_case@add_case(Mod, Case) -> ok@ 
add_case@add_case(Name, Mod, Case) -> ok@ 
add_cases@add_cases(Mod, Cases) -> ok@ 
add_cases@add_cases(Name, Mod, Cases) -> ok@ 
add_spec@add_spec(TestSpecFile) -> ok | {error, nofile}@ 
add_dir_with_skip@add_dir_with_skip(Name, [Dir|Dirs], Skip) -> ok@	
add_dir_with_skip@add_dir_with_skip(Name, [Dir|Dirs], Pattern, Skip) -> ok@ 
add_module_with_skip@add_module_with_skip(Mod, Skip) -> ok@ 
add_module_with_skip@add_module_with_skip(Name, [Mod|Mods], Skip) -> ok@ 
add_case_with_skip@add_case_with_skip(Mod, Case, Skip) -> ok@ 
add_case_with_skip@add_case_with_skip(Name, Mod, Case, Skip) -> ok@	
add_cases_with_skip@add_cases_with_skip(Mod, Cases, Skip) -> ok@	
add_cases_with_skip@add_cases_with_skip(Name, Mod, Cases, Skip) -> ok@	
add_tests_with_skip@add_tests_with_skip(Name, Tests, Skip) -> ok@ 
abort_current_testcase@abort_current_testcase(Reason) -> ok | {error,no_testcase_running}@ 
set_levels@set_levels(Console, Major, Minor) -> ok@ 
get_levels@get_levels() -> {Console, Major, Minor}@ 
jobs@jobs() -> JobQueue@ 
multiply_timetraps@multiply_timetraps(N) -> ok@ 
scale_timetraps@scale_timetraps(Bool) -> ok@ 
get_timetrap_parameters@get_timetrap_parameters() -> {N,Bool} @ 
cover@cover(Application,Analyse) -> ok@ 
cover@cover(App,CoverFile,Analyse) -> ok@ 
cross_cover_analyse@cross_cover_analyse(Level) -> ok@ 
trc@trc(TraceInfoFile) -> ok | {error, Reason}@ 
stop_trace@stop_trace() -> ok | {error, not_tracing}@ 
run_test@run_test(CommandLine) -> ok@ 
get_suite@get_suite(Mod,Func) -> TestCaseList@ 
init_tc@init_tc(Mod,Func,Args0) -> {ok,Args1} | {skip,ReasonToSkip} | {auto_skip,ReasonToSkip} | {fail,ReasonToFail}@ 
end_tc@end_tc(Mod,Func,Status) -> ok | {fail,ReasonToFail}@ 
report@report(What,Data) -> ok@ 
error_notification@error_notification(Mod, Func, Args, Error) -> ok@ 
warn@warn(What) -> boolean()@ 
target_info@target_info() -> InfoStr@ 
