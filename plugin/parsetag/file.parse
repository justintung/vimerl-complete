advise@advise(IoDevice, Offset, Length, Advise) -> ok | {error, Reason}@ IoDevice =  Offset = Length = integer() Advise =  Reason =  posix()  | badarg   
change_group@change_group(Filename, Gid) -> ok | {error, Reason}@ Filename =  Gid = integer() Reason =  posix()  | badarg   
change_mode@change_mode(Filename, Mode) -> ok | {error, Reason}@ Filename =  Mode = integer() Reason =  posix()  | badarg   
change_owner@change_owner(Filename, Uid) -> ok | {error, Reason}@ Filename =  Uid = integer() Reason =  posix()  | badarg   
change_owner@change_owner(Filename, Uid, Gid) -> ok | {error, Reason}@ Filename =  Uid = Gid = integer() Reason =  posix()  | badarg   
change_time@change_time(Filename, Mtime) -> ok | {error, Reason}@ Filename =  Mtime =  Reason =  posix()  | badarg   
change_time@change_time(Filename, Atime, Mtime) -> ok | {error, Reason}@ Filename =  Atime = Mtime =  Reason =  posix()  | badarg   
close@close(IoDevice) -> ok | {error, Reason}@ IoDevice =  Reason =  posix()  | badarg | terminated   
consult@consult(Filename) -> {ok, Terms} | {error, Reason}@ Filename =  Terms = [term()] Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
copy@copy(Source, Destination) -> {ok, BytesCopied} | {error, Reason}@ Source = Destination =  Filename =  Modes = [ BytesCopied = integer() >= 0 Reason =  posix()  | badarg | terminated   
copy@copy(Source, Destination, ByteCount) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, BytesCopied} | {error, Reason}@ Source = Destination =  Filename =  Modes = [ ByteCount = integer() >= 0 | infinity BytesCopied = integer() >= 0 Reason =  posix()  | badarg | terminated   
del_dir@del_dir(Dir) -> ok | {error, Reason}@ Dir =  Reason =  posix()  | badarg   
delete@delete(Filename) -> ok | {error, Reason}@ Filename =  Reason =  posix()  | badarg   
eval@eval(Filename) -> ok | {error, Reason}@ Filename =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
eval@eval(Filename, Bindings) -> ok | {error, Reason}@ Filename =  Bindings =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
file_info@file_info(Filename) -> {ok, FileInfo} | {error, Reason}@ 
format_error@format_error(Reason) -> Chars@ Reason =  Chars = string()   
get_cwd@get_cwd() -> {ok, Dir} | {error, Reason}@ Dir =  Reason =  posix()    
get_cwd@get_cwd(Drive) -> {ok, Dir} | {error, Reason}@ Drive = string() Dir =  Reason =  posix()  | badarg   
list_dir@list_dir(Dir) -> {ok, Filenames} | {error, Reason}@ Dir =  Filenames = [ Reason =  posix()  | badarg   
make_dir@make_dir(Dir) -> ok | {error, Reason}@ Dir =  Reason =  posix()  | badarg   
make_link@make_link(Existing, New) -> ok | {error, Reason}@ Existing = New =  Reason =  posix()  | badarg   
make_symlink@make_symlink(Existing, New) -> ok | {error, Reason}@ Existing = New =  Reason =  posix()  | badarg   
native_name_encoding@native_name_encoding() -> latin1 | utf8@ 
open@open(Filename, Modes) -> {ok, IoDevice} | {error, Reason}@ Filename =  Modes = [ IoDevice =  Reason =  posix()  | badarg | system_limit   
path_consult@path_consult(Path, Filename) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, Terms, FullName} | {error, Reason}@ Path = [Dir] Dir = Filename =  Terms = [term()] FullName =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
path_eval@path_eval(Path, Filename) -> {ok, FullName} | {error, Reason}@ Path = [Dir ::  Filename =  FullName =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
path_open@path_open(Path, Filename, Modes) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, IoDevice, FullName} | {error, Reason}@ Path = [Dir ::  Filename =  Modes = [ IoDevice =  FullName =  Reason =  posix()  | badarg | system_limit   
path_script@path_script(Path, Filename) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, Value, FullName} | {error, Reason}@ Path = [Dir ::  Filename =  Value = term() FullName =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
path_script@path_script(Path, Filename, Bindings) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, Value, FullName} | {error, Reason}@ Path = [Dir ::  Filename =  Bindings =  Value = term() FullName =  Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
pid2name@pid2name(Pid) -> {ok, Filename} | undefined@ Filename =  Pid = pid()   
position@position(IoDevice, Location) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, NewPosition} | {error, Reason}@ IoDevice =  Location =  NewPosition = integer() Reason =  posix()  | badarg | terminated   
pread@pread(IoDevice, LocNums) -> {ok, DataL} | eof | {error, Reason}@ IoDevice =  LocNums =  DataL = [Data] Data = string() | binary() | eof Reason =  posix()  | badarg | terminated   
pread@pread(IoDevice, Location, Number) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, Data} | eof | {error, Reason}@ IoDevice =  Location =  Number = integer() >= 0 Data = string() | binary() Reason =  posix()  | badarg | terminated   
pwrite@pwrite(IoDevice, LocBytes) -> ok | {error, {N, Reason}}@ IoDevice =  LocBytes = [{Location ::  N = integer() >= 0 Reason =  posix()  | badarg | terminated   
pwrite@pwrite(IoDevice, Location, Bytes) -> ok | {error, Reason}@ IoDevice =  Location =  Bytes = iodata() Reason =  posix()  | badarg | terminated   
read@read(IoDevice, Number) -> {ok, Data} | eof | {error, Reason}@ IoDevice =  Number = integer() >= 0 Data = string() | binary() Reason =  posix()  | badarg | terminated   
read_file@read_file(Filename) -> {ok, Binary} | {error, Reason}@ Filename =  Binary = binary() Reason =  posix()  | badarg | terminated | system_limit   
read_file_info@read_file_info(Filename) -> {ok, FileInfo} | {error, Reason}@ Filename =  FileInfo =  Reason =  posix()  | badarg   
read_file_info@read_file_info(Filename, Opts) -> {ok, FileInfo} | {error, Reason}@ Filename =  Opts = [ FileInfo =  Reason =  posix()  | badarg   
read_line@read_line(IoDevice) -> {ok, Data} | eof | {error, Reason}@ IoDevice =  Data = string() | binary() Reason =  posix()  | badarg | terminated   
read_link@read_link(Name) -> {ok, Filename} | {error, Reason}@ Name =  Filename =  Reason =  posix()  | badarg   
read_link_info@read_link_info(Name) -> {ok, FileInfo} | {error, Reason}@ Name =  FileInfo =  Reason =  posix()  | badarg   
read_link_info@read_link_info(Name, Opts) -> {ok, FileInfo} | {error, Reason}@ Name =  Opts = [ FileInfo =  Reason =  posix()  | badarg   
rename@rename(Source, Destination) -> ok | {error, Reason}@ Source = Destination =  Reason =  posix()  | badarg   
script@script(Filename) -> {ok, Value} | {error, Reason}@ Filename =  Value = term() Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
script@script(Filename, Bindings) -> {ok, Value} | {error, Reason}@ Filename =  Bindings =  Value = term() Reason =  posix() <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| badarg<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| terminated<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| system_limit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| {Line :: integer(), Mod :: module(), Term :: term()}   
set_cwd@set_cwd(Dir) -> ok | {error, Reason}@ Dir =  Reason =  posix()  | badarg   
sync@sync(IoDevice) -> ok | {error, Reason}@ IoDevice =  Reason =  posix()  | badarg | terminated   
datasync@datasync(IoDevice) -> ok | {error, Reason}@ IoDevice =  Reason =  posix()  | badarg | terminated   
truncate@truncate(IoDevice) -> ok | {error, Reason}@ IoDevice =  Reason =  posix()  | badarg | terminated   
sendfile@sendfile(Filename, Socket) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, integer() >= 0} |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{error, inet:posix()  | closed | badarg | not_owner}@ Filename =  Socket =  inet:socket()    
sendfile@sendfile(RawFile, Socket, Offset, Bytes, Opts) -><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ok, integer() >= 0} |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{error, inet:posix()  | closed | badarg | not_owner}@ RawFile =  Socket =  Offset = Bytes = integer() >= 0 Opts = [ sendfile_option() ]   
write@write(IoDevice, Bytes) -> ok | {error, Reason}@ IoDevice =  Bytes = iodata() Reason =  posix()  | badarg | terminated   
write_file@write_file(Filename, Bytes) -> ok | {error, Reason}@ Filename =  Bytes = iodata() Reason =  posix()  | badarg | terminated | system_limit   
write_file@write_file(Filename, Bytes, Modes) -> ok | {error, Reason}@ Filename =  Bytes = iodata() Modes = [ Reason =  posix()  | badarg | terminated | system_limit   
write_file_info@write_file_info(Filename, FileInfo) -> ok | {error, Reason}@ Filename =  FileInfo =  Reason =  posix()  | badarg   
write_file_info@write_file_info(Filename, FileInfo, Opts) -> ok | {error, Reason}@ Filename =  Opts = [ FileInfo =  Reason =  posix()  | badarg   
