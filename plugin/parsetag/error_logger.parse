error_msg@error_msg(Format) -> ok@ Format = string()   
error_msg@error_msg(Format, Data) -> ok@ Format = string() Data = list()   
format@format(Format, Data) -> ok@ Format = string() Data = list()   
error_report@error_report(Report) -> ok@ Report =  report()    
error_report@error_report(Type, Report) -> ok@ Type = term() Report =  report()    
warning_map@warning_map() -> Tag@ 
warning_msg@warning_msg(Format) -> ok@ Format = string()   
warning_msg@warning_msg(Format, Data) -> ok@ Format = string() Data = list()   
warning_report@warning_report(Report) -> ok@ Report =  report()    
warning_report@warning_report(Type, Report) -> ok@ Type = any() Report =  report()    
info_msg@info_msg(Format) -> ok@ Format = string()   
info_msg@info_msg(Format, Data) -> ok@ Format = string() Data = list()   
info_report@info_report(Report) -> ok@ Report =  report()    
info_report@info_report(Type, Report) -> ok@ Type = any() Report =  report()    
add_report_handler@add_report_handler(Handler) -> any()@ Handler = module()   
add_report_handler@add_report_handler(Handler, Args) -> Result@ Handler = module() Args =  Result =  gen_event:add_handler_ret()    
delete_report_handler@delete_report_handler(Handler) -> Result@ Handler = module() Result =  gen_event:del_handler_ret()    
tty@tty(Flag) -> ok@ Flag = boolean()   
logfile@logfile(Request :: {open, Filename}) -> ok | {error, OpenReason}</h3><h3>logfile(Request :: close) -> ok | {error, CloseReason}</h3><h3>logfile(Request :: filename) -> Filename | {error, FilenameReason}@ Filename =  OpenReason = allready_have_logfile |  CloseReason = module_not_found FilenameReason = no_log_file   
